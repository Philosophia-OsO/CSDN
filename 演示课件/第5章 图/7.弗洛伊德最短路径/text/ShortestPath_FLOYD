void ShortestPath_FLOYD()
{
 
  int u, v, w, i;
  P.assign(vexs.size());
  D.assign(vexs.size());
  for(v=0; v<vexs.size(); v++)
  {
    D[v].assign(vexs.size());
    P[v].assign(vexs.size());
    for(w=0; w<vexs.size(); w++)
    {
      D[v][w]=vexs[v].arcs[w].adj;
      P[v][w].assign(vexs.size(), false);
      
      if(D[v][w]<INFINITY)
        P[v][w][v]=P[v][w][w]=true;
    }
  }
  for(u=0; u<vexs.size(); u++)
    for(v=0; v<vexs.size(); v++)
    {
      if(u==v)
        continue;
      for(w=0; w<vexs.size(); w++)
      {
        if(w==u || w==v)
          continue;
        if(D[v][u]<INFINITY && D[u][w]<INFINITY && D[v][u]+D[u][w]<D[v][w])
        {
          D[v][w]=D[v][u]+D[u][w];
          for(i=0; i<vexs.size(); i++)
            P[v][w][i]=P[v][u][i]||P[u][w][i];
            
        }
      }
    }
}

