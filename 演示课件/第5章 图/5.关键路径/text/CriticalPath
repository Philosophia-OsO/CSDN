bool CriticalPath()
{
  stack<int> S;
  int i, j;
  list<ArcTNode<ArcT> >::const_iterator p;
  bool f=TopologicalOrder(S);
  if(!f)
    return false;
  j=S.top();
  vl.assign(vexs.size(), ve[j]);
  while(!S.empty())
  {
    j=S.top();
    S.pop();
    for(p=vexs[j].arcs.begin(); p!=vexs[j].arcs.end(); p++)
    {
      i=p->adjvex;
      if(vl[i]-p->arc.weight<vl[j])
      
        vl[j]=vl[i]-p->arc.weight;
        
    }    
  }
  for(j=0; j<vexs.size(); j++)
    for(p=vexs[j].arcs.begin(); p!=vexs[j].arcs.end(); p++)
    {
      i=p->adjvex;
      if(ve[j]+p->arc.weight==vl[i])
        cout<<" ¹Ø¼ü»î¶¯";
    }
  return true;
}

