bool DeleteDLTree(string Key, D &r)
{
  DLTNode *p=dst, *q=NULL;
  stack<flagptr> S;
  flagptr fp;
  int rc=SearchDLTree(Key);
  if(rc==-1)
    return false;
  fp.ptr=p;
  fp.flag=false;
  S.push(fp);
  for(int i=0; i<Key.size(); i++)
  {
    p=p->first;
    while(p->symbol<Key[i])
    {
      fp.ptr=p;
      fp.flag=true;
      S.push(fp);
      p=p->next;
    }
    fp.ptr=p;
    fp.flag=false;
    S.push(fp);
  }
  p=p->first;
  r=record[p->index];
  record[p->index].key[0]=Empty;
  if(p->index<MinEmpt)
    MinEmpt=p->index;
  while(!S.empty() && q==NULL)
  {
    q=p->next;
    fp=S.top();
    S.pop();
    if(fp.flag)
      fp.ptr->next=q;
    else
      fp.ptr->first=q;
    delete p;
    p=fp.ptr;
    if(p->first!=NULL)
      break;
  }
  return true;
}

